# Generated by Django 5.2.5 on 2025-09-18 05:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reels', '0008_reel_is_ad'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('title', models.CharField(help_text='Title of the game.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description or instructions for the reward.', null=True)),
                ('image', models.ImageField(help_text='Image representing the reward (mandatory).', upload_to='game_rewards/')),
                ('link', models.URLField(blank=True, help_text='Optional external link for the reward (Amazon, recharge, etc.).', null=True)),
                ('reward_type', models.CharField(choices=[('cash', 'Cash'), ('digital', 'Digital'), ('product', 'Product')], help_text='Type of reward: cash, digital, or product.', max_length=20)),
                ('number_of_winners', models.PositiveIntegerField(default=1, help_text='Number of winners for this game.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. True = active, False = hidden.')),
                ('creator', models.ForeignKey(help_text='User who created this game.', on_delete=django.db.models.deletion.CASCADE, related_name='created_games', to=settings.AUTH_USER_MODEL)),
                ('reel', models.ForeignKey(blank=True, help_text='Optional reel this game is linked to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='reels.reel')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('guessed_number', models.IntegerField(help_text='Number guessed by the user.')),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Time when the guess was submitted.')),
                ('is_winner', models.BooleanField(default=False, help_text='True if this submission won a prize.')),
                ('prize_position', models.PositiveIntegerField(blank=True, help_text='Position of the prize won (1 = first prize, 2 = second, etc.)', null=True)),
                ('game', models.ForeignKey(help_text='Game for which this submission is made.', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='games.game')),
                ('user', models.ForeignKey(help_text='User who submitted the guess.', on_delete=django.db.models.deletion.CASCADE, related_name='game_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Submission',
                'verbose_name_plural': 'Game Submissions',
                'ordering': ['submitted_at'],
                'unique_together': {('game', 'user', 'guessed_number')},
            },
        ),
    ]
