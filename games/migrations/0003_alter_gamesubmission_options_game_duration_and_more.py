# Generated by Django 5.2.5 on 2025-09-18 08:01

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('games', '0002_game_guess_max_game_guess_min_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='gamesubmission',
            options={'ordering': ['submitted_at']},
        ),
        migrations.AddField(
            model_name='game',
            name='duration',
            field=models.DurationField(default=datetime.timedelta(days=1), help_text='Duration for which the game is active.'),
        ),
        migrations.AddField(
            model_name='game',
            name='end_time',
            field=models.DateTimeField(blank=True, help_text='Time when the game will end (calculated automatically)', null=True),
        ),
        migrations.AlterField(
            model_name='gamesubmission',
            name='game',
            field=models.ForeignKey(help_text='The game for which this submission was made.', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='games.game'),
        ),
        migrations.AlterField(
            model_name='gamesubmission',
            name='guessed_number',
            field=models.PositiveIntegerField(help_text='Number guessed by the user.'),
        ),
        migrations.AlterField(
            model_name='gamesubmission',
            name='prize_position',
            field=models.PositiveIntegerField(blank=True, help_text='Prize rank if won.', null=True),
        ),
        migrations.AlterField(
            model_name='gamesubmission',
            name='submitted_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Submission timestamp.'),
        ),
        migrations.CreateModel(
            name='GameHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('reward_type', models.CharField(max_length=20)),
                ('number_of_winners', models.PositiveIntegerField()),
                ('guess_min', models.PositiveIntegerField()),
                ('guess_max', models.PositiveIntegerField()),
                ('reel_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='games.game')),
            ],
            options={
                'verbose_name': 'Game History',
                'verbose_name_plural': 'Game Histories',
            },
        ),
        migrations.CreateModel(
            name='WinnerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('number', models.PositiveIntegerField(help_text='The winning number claimed')),
                ('prize_position', models.PositiveIntegerField(default=1)),
                ('reward_type', models.CharField(max_length=20)),
                ('reward_description', models.TextField(blank=True, null=True)),
                ('reward_image', models.ImageField(blank=True, null=True, upload_to='game_rewards/')),
                ('reward_link', models.URLField(blank=True, null=True)),
                ('claimed_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winner_histories', to='games.game')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Winner History',
                'verbose_name_plural': 'Winner Histories',
                'ordering': ['claimed_at'],
            },
        ),
        migrations.CreateModel(
            name='WinningNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('number', models.PositiveIntegerField(help_text='The winning number for this game.')),
                ('reward_description', models.TextField(blank=True, null=True)),
                ('reward_image', models.ImageField(blank=True, null=True, upload_to='game_rewards/')),
                ('reward_link', models.URLField(blank=True, null=True)),
                ('reward_type', models.CharField(choices=[('cash', 'Cash'), ('digital', 'Digital'), ('product', 'Product')], max_length=20)),
                ('prize_position', models.PositiveIntegerField(default=1, help_text='1st prize, 2nd prize, etc.')),
                ('is_claimed', models.BooleanField(default=False, help_text='Has this winning number been claimed by someone?')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winning_numbers', to='games.game')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_numbers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('game', 'number')},
            },
        ),
    ]
