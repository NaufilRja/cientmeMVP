# Generated by Django 5.2.5 on 2025-09-05 16:43

import core.utils.upload_paths
import core.utils.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('title', models.CharField(max_length=200)),
                ('video', models.FileField(help_text='Video file up to 15 seconds and 20 MB', upload_to=core.utils.upload_paths.reel_upload_to, validators=[core.utils.validators.validate_video_file_size])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=core.utils.upload_paths.reel_thumbnail_upload_to, validators=[core.utils.validators.validate_image_file_size])),
                ('views', models.PositiveIntegerField(default=0)),
                ('shares', models.PositiveIntegerField(default=0)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_reels', to=settings.AUTH_USER_MODEL)),
                ('saves', models.ManyToManyField(blank=True, help_text='Users who saved this reel', related_name='saved_reels', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Object creation time.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('comment', models.TextField(max_length=500)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='reels.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reels.reel')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification time.')),
                ('is_active', models.BooleanField(default=True, help_text='Soft-delete flag. Inactive == hidden.')),
                ('target_reach', models.PositiveIntegerField(default=10000)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('badge_earned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares_logs', to='reels.reel')),
                ('sharer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_reels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
